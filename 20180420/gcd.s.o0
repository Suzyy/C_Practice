	.section	__TEXT,__text,regular,pure_instructions
	.macosx_version_min 10, 12
	.globl	_getGCD
	.p2align	4, 0x90
_getGCD:                                ## @getGCD
	.cfi_startproc
## BB#0:
	pushq	%rbp
Lcfi0:
	.cfi_def_cfa_offset 16
Lcfi1:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Lcfi2:
	.cfi_def_cfa_register %rbp
	movl	%edi, -4(%rbp)
	movl	%esi, -8(%rbp)
	movl	$0, -12(%rbp)
	movl	$0, -16(%rbp)
	movl	-4(%rbp), %esi
	cmpl	-8(%rbp), %esi
	jle	LBB0_2
## BB#1:
	movl	-8(%rbp), %eax
	movl	%eax, -24(%rbp)         ## 4-byte Spill
	jmp	LBB0_3
LBB0_2:
	movl	-4(%rbp), %eax
	movl	%eax, -24(%rbp)         ## 4-byte Spill
LBB0_3:
	movl	-24(%rbp), %eax         ## 4-byte Reload
	movl	%eax, -16(%rbp)
	movl	-16(%rbp), %eax
	movl	%eax, -20(%rbp)
LBB0_4:                                 ## =>This Inner Loop Header: Depth=1
	cmpl	$0, -20(%rbp)
	jle	LBB0_10
## BB#5:                                ##   in Loop: Header=BB0_4 Depth=1
	movl	-4(%rbp), %eax
	cltd
	idivl	-20(%rbp)
	cmpl	$0, %edx
	jne	LBB0_8
## BB#6:                                ##   in Loop: Header=BB0_4 Depth=1
	movl	-8(%rbp), %eax
	cltd
	idivl	-20(%rbp)
	cmpl	$0, %edx
	jne	LBB0_8
## BB#7:
	movl	-20(%rbp), %eax
	movl	%eax, -12(%rbp)
	jmp	LBB0_10
LBB0_8:                                 ##   in Loop: Header=BB0_4 Depth=1
	jmp	LBB0_9
LBB0_9:                                 ##   in Loop: Header=BB0_4 Depth=1
	movl	-20(%rbp), %eax
	addl	$-1, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB0_4
LBB0_10:
	movl	-12(%rbp), %eax
	popq	%rbp
	retq
	.cfi_endproc

	.globl	_getGCD2
	.p2align	4, 0x90
_getGCD2:                               ## @getGCD2
	.cfi_startproc
## BB#0:
	pushq	%rbp
Lcfi3:
	.cfi_def_cfa_offset 16
Lcfi4:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Lcfi5:
	.cfi_def_cfa_register %rbp
	movl	%edi, -4(%rbp)
	movl	%esi, -8(%rbp)
	movl	$0, -12(%rbp)
	movl	$0, -16(%rbp)
LBB1_1:                                 ## =>This Inner Loop Header: Depth=1
	cmpl	$0, -12(%rbp)
	setne	%al
	xorb	$-1, %al
	testb	$1, %al
	jne	LBB1_2
	jmp	LBB1_15
LBB1_2:                                 ##   in Loop: Header=BB1_1 Depth=1
	movl	-4(%rbp), %eax
	cmpl	-8(%rbp), %eax
	jne	LBB1_4
## BB#3:                                ##   in Loop: Header=BB1_1 Depth=1
	movl	-4(%rbp), %eax
	movl	%eax, -16(%rbp)
	movl	$1, -12(%rbp)
	jmp	LBB1_14
LBB1_4:                                 ##   in Loop: Header=BB1_1 Depth=1
	movl	-4(%rbp), %eax
	cmpl	-8(%rbp), %eax
	jle	LBB1_9
## BB#5:                                ##   in Loop: Header=BB1_1 Depth=1
	movl	-4(%rbp), %eax
	subl	-8(%rbp), %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	cmpl	-8(%rbp), %eax
	jne	LBB1_7
## BB#6:                                ##   in Loop: Header=BB1_1 Depth=1
	movl	-4(%rbp), %eax
	movl	%eax, -16(%rbp)
	movl	$1, -12(%rbp)
	jmp	LBB1_8
LBB1_7:                                 ##   in Loop: Header=BB1_1 Depth=1
	jmp	LBB1_8
LBB1_8:                                 ##   in Loop: Header=BB1_1 Depth=1
	jmp	LBB1_13
LBB1_9:                                 ##   in Loop: Header=BB1_1 Depth=1
	movl	-8(%rbp), %eax
	subl	-4(%rbp), %eax
	movl	%eax, -8(%rbp)
	movl	-4(%rbp), %eax
	cmpl	-8(%rbp), %eax
	jne	LBB1_11
## BB#10:                               ##   in Loop: Header=BB1_1 Depth=1
	movl	-4(%rbp), %eax
	movl	%eax, -16(%rbp)
	movl	$1, -12(%rbp)
	jmp	LBB1_12
LBB1_11:                                ##   in Loop: Header=BB1_1 Depth=1
	jmp	LBB1_12
LBB1_12:                                ##   in Loop: Header=BB1_1 Depth=1
	jmp	LBB1_13
LBB1_13:                                ##   in Loop: Header=BB1_1 Depth=1
	jmp	LBB1_14
LBB1_14:                                ##   in Loop: Header=BB1_1 Depth=1
	jmp	LBB1_1
LBB1_15:
	movl	-16(%rbp), %eax
	popq	%rbp
	retq
	.cfi_endproc

	.globl	_main
	.p2align	4, 0x90
_main:                                  ## @main
	.cfi_startproc
## BB#0:
	pushq	%rbp
Lcfi6:
	.cfi_def_cfa_offset 16
Lcfi7:
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
Lcfi8:
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movl	$0, -4(%rbp)
	movl	$0, -8(%rbp)
	movl	$0, -12(%rbp)
	movl	$2000, -16(%rbp)        ## imm = 0x7D0
	movl	$1, -20(%rbp)
LBB2_1:                                 ## =>This Loop Header: Depth=1
                                        ##     Child Loop BB2_3 Depth 2
	movl	-20(%rbp), %eax
	cmpl	-16(%rbp), %eax
	jg	LBB2_8
## BB#2:                                ##   in Loop: Header=BB2_1 Depth=1
	movl	$1, -24(%rbp)
LBB2_3:                                 ##   Parent Loop BB2_1 Depth=1
                                        ## =>  This Inner Loop Header: Depth=2
	movl	-24(%rbp), %eax
	cmpl	-16(%rbp), %eax
	jg	LBB2_6
## BB#4:                                ##   in Loop: Header=BB2_3 Depth=2
	movl	-20(%rbp), %edi
	movl	-24(%rbp), %esi
	callq	_getGCD
	movl	%eax, -8(%rbp)
## BB#5:                                ##   in Loop: Header=BB2_3 Depth=2
	movl	-24(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -24(%rbp)
	jmp	LBB2_3
LBB2_6:                                 ##   in Loop: Header=BB2_1 Depth=1
	jmp	LBB2_7
LBB2_7:                                 ##   in Loop: Header=BB2_1 Depth=1
	movl	-20(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -20(%rbp)
	jmp	LBB2_1
LBB2_8:
	xorl	%eax, %eax
	addq	$32, %rsp
	popq	%rbp
	retq
	.cfi_endproc


.subsections_via_symbols
